---
title: Notebook Metadata
julia:
    env: ["KEY=value"]
---

```{julia}
import QuartoNotebookWorker
```

```{julia}
let options = QuartoNotebookWorker.notebook_options()
    options["format"]["metadata"]["julia"]["env"] == ["KEY=value"]
end
```

```{julia}
#| key: value
let options = QuartoNotebookWorker.cell_options()
    options["key"] == "value"
end 
```

```{julia}
struct CustomStruct
    content::Any

    function CustomStruct(content)
        new([
            QuartoNotebookWorker.Cell(
                n.thunk;
                code = get(n, :code, nothing),
                options = get(n, :options, Dict()),
            ) for n in content
        ])
    end
end
QuartoNotebookWorker.expand(cs::CustomStruct) = cs.content
```

```{julia}
#| key: value_1
static_options = QuartoNotebookWorker.cell_options()
CustomStruct([
    (;
        thunk = function ()
            options = QuartoNotebookWorker.cell_options()
            static_options["key"] == "value_1" && options["key"] == "value_2"
        end,
        options = Dict{String,Any}("key" => "value_2"),
    ),
])
```
