---
title: Cell Expansion
---

```{julia}
import QuartoNotebookWorker: Cell, expand
```

```{julia}
struct CustomStruct
    content::Any

    function CustomStruct(content)
        new([
            Cell(
                n.thunk;
                code = get(n, :code, nothing),
                options = get(n, :options, Dict()),
            ) for n in content
        ])
    end
end
expand(cs::CustomStruct) = cs.content
```

```{julia}
#| echo: false
CustomStruct([
    (;
        thunk = function ()
            println("print call")
            display("display call")
            "return value"
        end,
        code = """
        # Fake code goes here.
        """,
        options = Dict("layout-ncol" => 2),
    ),
])
```

```{julia}
CustomStruct([
    (;
        thunk = function ()
            return CustomStruct([
                (;
                    thunk = function ()
                        return CustomStruct([(; thunk = () -> 1, options = Dict("layout-ncol" => 1))])
                    end,
                ),
                (;
                    thunk = function ()
                        return CustomStruct([(; thunk = () -> (display(2); 2)), (; thunk = () -> 3)])
                    end,
                ),
            ])
        end,
    ),
    (; thunk = () -> 4),
    (;
        thunk = () -> println("## Header"),
        options = Dict("output" => "asis", "echo" => false),
    ),
])
```
